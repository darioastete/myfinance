---
import Layout from '../../layouts/Layout.astro';

import Modal from "@components/Modal.vue";
import Chart from "@components/Chart.vue";


---
<Layout title="Dashboard" isBalance={false}>
    <!-- <div class="w-2 " >
        <button id="btnOpenModal" onclick="{`window.${id}.showModal()`}" >Abrir modal</button>
        <Modal open={false} client:visible id="modalA" />
    </div> -->
    <div class="flex justify-center">
        <h3 class="text-2xl font-semibold">Balance</h3>
    </div>
    <div class="flex overflow-hidden items-center justify-center">
        <div class="w-full">
            <Chart  client:visible />
        </div>
        <!-- <div class="w-full">
            <canvas id="forWeek" class="w-full" />
            <CardChart />
        </div>
        <div class="w-full">
            <canvas id="forMonth" class="w-full" />
        </div>
        <div class="w-full">
            <canvas id="forYear" class="w-full" />
        </div> -->
    </div>
</Layout>

<!-- <script>
    import Chart from "chart.js/auto";
    import { DaysArray, MonthsArrayShort } from "@const/index";
    import { getForWeek } from "@common/utils/dashboard/getForWeek.util";
    import { getForYear } from "@/common/utils/dashboard/getForYear.util";
    import { getForMonth } from "@/common/utils/dashboard/getForMonth.util";
    
    const ctx = document.getElementById('forWeek') as HTMLCanvasElement;
    const ctxMonth = document.getElementById('forMonth') as HTMLCanvasElement;
    const ctxYear = document.getElementById('forYear') as HTMLCanvasElement;

    async function initializeCharts() {
        const mountForDays =  await getForWeek(2,7,2024);
        const mountForMonth =  await getForMonth(7,2024);
        const mountForYear =  await getForYear(2024);

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: DaysArray,
                datasets: [
                {
                    label: 'Incomes',
                    data: mountForDays.incomes,
                    borderWidth: 2,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                },
                {
                    label: 'Expenses',
                    data: mountForDays.expenses, // Primer conjunto de datos
                    borderWidth: 2,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgb(255, 99, 132)',
                },
            ]
            },
            options: {
                layout: {
            padding: 20
        }
            }
        });

        new Chart(ctxMonth, {
            type: 'bar',
            data: {
                labels: mountForMonth.labels,
                datasets: [
                {
                    label: 'Incomes',
                    data: mountForMonth.incomes,
                    borderWidth: 2,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                },
                {
                    label: 'Expenses',
                    data: mountForMonth.expenses, // Primer conjunto de datos
                    borderWidth: 2,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgb(255, 99, 132)',
                },
            ]
            },
            options: {
                layout: {
            padding: 20
        }
            }
        });
    
        new Chart(ctxYear, {
            type: 'bar',
            data: {
                labels: MonthsArrayShort,
                datasets: [
                {
                    label: 'Incomes',
                    data: mountForYear.incomes,
                    borderWidth: 2,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                },
                {
                    label: 'Expenses',
                    data: mountForYear.expenses, // Primer conjunto de datos
                    borderWidth: 2,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgb(255, 99, 132)',
                },
                ]
            },
            options: {
                layout: {
                    padding: 20
                },
                onClick: function(evt, item) {
                    console.log(item);
                    if (!item.length) return;
                    console.log(item[0].datasetIndex === 0 ? 'Incomes' : 'Expenses');
                    console.log('Month',item[0].index);
                }
            }
        });
    }

    initializeCharts();

</script> -->